
# Global cloudwatch retention period for the EKS, VPC, SSM, and PostgreSQL logs.
cloudwatch_retention = 7

# Cluster Autoscaler Helm Config
cluster_autoscaler_helm_config = {
  "version": "9.28.0"
}

# Install FluentBit to send container logs to CloudWatch.
enable_aws_for_fluentbit = false

# Enable Ingress Nginx add-on
enable_ingress_nginx = false

# Scans license server EC2 instance and EKS nodes for updates. Installs patches on license server automatically. EKS nodes need to be updated manually.
enable_patching = false

# The maximum number of nodes for gpu job execution
gpuNodeCountMax = 12

# The minimum number of nodes for gpu job execution
gpuNodeCountMin = 0

# The disk size in GiB of the nodes for the gpu job execution
gpuNodeDiskSize = 100

# Specifies whether an additional node pool for gpu job execution is added to the kubernetes cluster
gpuNodePool = false

# The machine size of the nodes for the gpu job execution
gpuNodeSize = [
  "p3.2xlarge"
]

# The NVIDIA driver version for GPU node group.
gpuNvidiaDriverVersion = "535.54.03"

# The name of the infrastructure. e.g. simphera-infra
infrastructurename = "simphera"

# 6-field Cron expression describing the install maintenance schedule. Must not overlap with variable scan_schedule.
install_schedule = "cron(0 3 * * ? *)"

# The maximum number of GPU nodes nodes for IVS jobs
ivsGpuNodeCountMax = 2

# The minimum number of GPU nodes nodes for IVS jobs
ivsGpuNodeCountMin = 0

# The disk size in GiB of the nodes for the IVS gpu job execution
ivsGpuNodeDiskSize = 100

# Specifies whether an additional node pool for IVS gpu job execution is added to the kubernetes cluster
ivsGpuNodePool = false

# The machine size of the GPU nodes for IVS jobs
ivsGpuNodeSize = [
  "g4dn.2xlarge"
]

# The version of the EKS cluster.
kubernetesVersion = "1.28"

# Specifies whether a license server VM will be created.
licenseServer = false

# The maximum number of Linux nodes for the job execution
linuxExecutionNodeCountMax = 10

# The minimum number of Linux nodes for the job execution
linuxExecutionNodeCountMin = 0

# The machine size of the Linux nodes for the job execution, user must check the availability of the instance types for the region. The list is ordered by priority where the first instance type gets the highest priority. Instance types must fulfill the following requirements: 64 GB RAM, 16 vCPUs, at least 110 IPs, at least 2 availability zones.
linuxExecutionNodeSize = [
  "m6a.4xlarge",
  "m5a.4xlarge",
  "m5.4xlarge",
  "m6i.4xlarge",
  "m4.4xlarge",
  "m7i.4xlarge",
  "m7a.4xlarge"
]

# The maximum number of Linux nodes for the regular services
linuxNodeCountMax = 12

# The minimum number of Linux nodes for the regular services
linuxNodeCountMin = 1

# The machine size of the Linux nodes for the regular services, user must check the availability of the instance types for the region. The list is ordered by priority where the first instance type gets the highest priority. Instance types must fulfill the following requirements: 64 GB RAM, 16 vCPUs, at least 110 IPs, at least 2 availability zones.
linuxNodeSize = [
  "m6a.4xlarge",
  "m5a.4xlarge",
  "m5.4xlarge",
  "m6i.4xlarge",
  "m4.4xlarge",
  "m7i.4xlarge",
  "m7a.4xlarge"
]

# How long in hours for the maintenance window.
maintainance_duration = 3

# Additional AWS account numbers to add to the aws-auth ConfigMap
map_accounts = []

# Additional IAM roles to add to the aws-auth ConfigMap
map_roles = []

# Additional IAM users to add to the aws-auth ConfigMap
map_users = []

# List of IDs for the private subnets.
private_subnet_ids = []

# 6-field Cron expression describing the scan maintenance schedule. Must not overlap with variable install_schedule.
scan_schedule = "cron(0 0 * * ? *)"

# A list containing the individual SIMPHERA instances, such as 'staging' and 'production'.
simpheraInstances = {
  "production": {
    "backup_retention": 35,
    "db_instance_type_keycloak": "db.t3.large",
    "db_instance_type_simphera": "db.t3.large",
    "enable_backup_service": true,
    "enable_deletion_protection": true,
    "enable_keycloak": true,
    "k8s_namespace": "simphera",
    "name": "production",
    "postgresqlApplyImmediately": false,
    "postgresqlMaxStorage": 100,
    "postgresqlMaxStorageKeycloak": 100,
    "postgresqlStorage": 20,
    "postgresqlStorageKeycloak": 20,
    "postgresqlVersion": "16",
    "secretname": "aws-simphera-dev-production"
  }
}

# The tags to be added to all resources.
tags = {}

# The CIDR for the virtual private cluster.
vpcCidr = "10.1.0.0/18"

# The ID of preconfigured VPC. Change from 'null' to use already existing VPC.
vpcId = ""

# List of CIDRs for the private subnets.
vpcPrivateSubnets = [
  "10.1.0.0/22",
  "10.1.4.0/22",
  "10.1.8.0/22"
]

# List of CIDRs for the public subnets.
vpcPublicSubnets = [
  "10.1.12.0/22",
  "10.1.16.0/22",
  "10.1.20.0/22"
]
